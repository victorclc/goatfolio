service: goatfolio-serverless

provider:
  name: aws
  region: us-east-2
  stage: ${env:STAGE, 'dev'}

resources:
  Resources:
    GoatfolioAppUserPool:
      Type: 'AWS::Cognito::UserPool'
      Properties:
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
        EmailVerificationSubject: "GOATFOLIO - Código de verificação"
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
            RequireUppercase: true
            TemporaryPasswordValidityDays: 1
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        UsernameConfiguration:
          CaseSensitive: false
        UserPoolName: "goatfolio_app"

    InvestmentsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: "Investments"
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
          - AttributeName: "subject"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "subject"
            KeyType: "HASH"
          - AttributeName: "id"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"

  Outputs:
    GoatfolioAppUserPoolArnOutput:
      Value:
        Fn::GetAtt: [ GoatfolioAppUserPool, Arn ]
      Export:
        Name: ${self:provider.stage}-GoatfolioAppUserPoolArnOutput
    InvestmentsTableArnOutput:
      Value:
        Fn::GetAtt: [ InvestmentsTable, Arn ]
      Export:
        Name: ${self:provider.stage}-InvestmentsTableArnOutput