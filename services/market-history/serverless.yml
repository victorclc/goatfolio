service: cotahist-transformer

provider:
  name: aws
  memorySize: 2048
  region: us-east-2
  stage: ${env:STAGE, 'dev'}
  runtime: python3.8
  timeout: 60
  tracing:
    lambda: true
  environment:
    PYTHONPATH: "src:libs"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
      Resource: arn:aws:s3:::${self:provider.stage}-b3cotahist/*
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:BatchWriteItem
      Resource:
        Fn::GetAtt: [ MarketDataTable, Arn ]
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:BatchWriteItem
      Resource:
        Fn::GetAtt: [ TickerInfoTable, Arn ]
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:GetQueueUrl
      Resource:
        'Fn::ImportValue': ${self:provider.stage}-ShitToNotifyQueueArn



package:
  exclude:
    - .cache/**
    - tests/**
    - test-env/**
  include:
    - ../../libs/auroradata/**
    - ../../libs/goatcommons/**

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    cacheLocation: '.cache/'

functions:
  transformCotaHist:
    handler: handlers.transform_cota_hist_handler
    events:
      - s3:
          bucket: ${self:provider.stage}-b3cotahist
          event: s3:ObjectCreated:*
          rules:
            - prefix: monthly/
            - suffix: .TXT
  ibovHistory:
    handler: handlers.ibov_history_handler
    events:
      - schedule: cron(0 22 L * ? *)

resources:
  Resources:
    MarketDataTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: "MarketData"
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: "ticker"
            AttributeType: "S"
          - AttributeName: "candle_date"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "ticker"
            KeyType: "HASH"
          - AttributeName: "candle_date"
            KeyType: "RANGE"

    TickerInfoTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: "TickerInfo"
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: "ticker"
            AttributeType: "S"
          - AttributeName: "isin"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "ticker"
            KeyType: "HASH"
        GlobalSecondaryIndexes:
          - IndexName: isinGlobalIndex
            KeySchema:
              - AttributeName: "isin"
                KeyType: "HASH"
            Projection:
              ProjectionType: ALL

  Outputs:
    MarketDataTableArnOutput:
      Value:
        Fn::GetAtt: [ MarketDataTable, Arn ]
      Export:
        Name: ${self:provider.stage}-MarketDataTableArnOutput
    TickerInfoTableArnOutput:
      Value:
        Fn::GetAtt: [ TickerInfoTable, Arn ]
      Export:
        Name: ${self:provider.stage}-TickerInfoTableArnOutput