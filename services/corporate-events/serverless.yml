service: corporate-events

provider:
  name: aws
  memorySize: 512
  region: us-east-2
  stage: ${env:STAGE, 'dev'}
  runtime: python3.8
  timeout: 300
  environment:
    PYTHONPATH: "src:libs"
    CORPORATE_BUCKET: ${self:provider.stage}-b3-corporate-events
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource: "arn:aws:secretsmanager:us-east-2:831967415635:secret:rds-db-credentials/cluster-B7EKYQNIWMBMYI6I6DNK6ICBEE/postgres-z9xJqf"
    - Effect: Allow
      Action:
        - rds-data:BatchExecuteStatement
      Resource: "arn:aws:rds:us-east-2:831967415635:cluster:serverless-goatfolio-dev-marketdatardscluster-dq6ryzdhjru0"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
      Resource: arn:aws:s3:::${self:provider.stage}-b3-corporate-events/*
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:GetQueueUrl
      Resource:
        'Fn::ImportValue': ${self:provider.stage}-AddInvestmentQueueArn

package:
  exclude:
    - .cache/**
    - tests/**
    - test-env/**
  include:
    - ../../libs/goatcommons/**

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    cacheLocation: '.cache/'

functions:
  processCorporateEventsFile:
    handler: handlers.process_corporate_events_file_handler
    vpc:
      securityGroupIds:
        - sg-15f9666f
      subnetIds:
        - subnet-0525b98aa3176a425
    events:
      - s3:
          bucket: ${self:provider.stage}-b3-corporate-events
          event: s3:ObjectCreated:Put
          rules:
            - prefix: new/
            - suffix: .csv

  downloadTodayCorporateEvents:
    handler: handlers.download_today_corporate_events_handler
    events:
      - schedule: cron(0 23 ? * MON-FRI *)

  checkForApplicableCorpoEvents:
    handler: handlers.check_for_applicable_corporate_events_handler
    events:
      - stream:
          type: dynamodb
          arn:
            'Fn::ImportValue': ${self:provider.stage}-InvestmentTableStreamArn
