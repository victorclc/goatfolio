name: event-notifier

on:
  push:
    branches: [ master, develop ]
    paths:
      - 'backend/event-notifier/**'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  SERVICE_PATH: ./backend/event-notifier

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.SERVICE_PATH}}
    steps:
      - uses: actions/checkout@v2
      - name: Set environment variables
        run: |
          echo $GITHUB_REF
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "STAGE=prod" >> "$GITHUB_ENV"
            echo "DOMAIN_NAME=api.goatfolio.com.br" >> "$GITHUB_ENV"
            echo "AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}" >> "$GITHUB_ENV"
            echo "AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}" >> "$GITHUB_ENV"
            echo "DEFAULT_WEBHOOK_URL=https://discord.com/api/webhooks/880771481007693825/yS5pVrrYvpGtmN2XqtcEf4t9Cio5PxIIuB9AHMlXv8Xq7q2RjFuaBTppWvrOJRp_Llh0" >> "$GITHUB_ENV"
            echo "COGNITO_WEBHOOK_URL=https://discord.com/api/webhooks/965939469612122122/QlJrB_qJ5q0Fyn_m5j-CW9cS1Voz45nQknRtUXHm7ZBbMBTQUtuw2R3gaOQu1tvE23T6" >> "$GITHUB_ENV"

          else
            echo "STAGE=dev" >> "$GITHUB_ENV"
            echo "DOMAIN_NAME=dev.goatfolio.com.br" >> "$GITHUB_ENV"
            echo "AWS_ACCESS_KEY_ID=${{secrets.DEV_AWS_ACCESS_KEY_ID}}" >> "$GITHUB_ENV"
            echo "AWS_SECRET_ACCESS_KEY=${{secrets.DEV_AWS_SECRET_ACCESS_KEY}}" >> "$GITHUB_ENV"
            echo "DEFAULT_WEBHOOK_URL=https://discord.com/api/webhooks/836095821765541909/61ZRaWHqunwfwmxlggGlv1ytEQXTJ2P6Jo-G8u8FvFREMphxS3zF7b_ypbU-CP-AcRKvr" >> "$GITHUB_ENV"
            echo "COGNITO_WEBHOOK_URL=https://discord.com/api/webhooks/965932774068461608/3Boxrq6-tAbRT04UDYyXnniBAxEMvYHKU0EfT8aL88xp-mbRlEpDziV0avmbVCe9T7Yqr" >> "$GITHUB_ENV"
          fi
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Setting up environment variables
        run: echo PYTHONPATH="../shared/libs:src:tests" >> $GITHUB_ENV
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          if [ -d tests/ ]; then pytest tests/; fi
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Installing NPM dependencies
        run: npm ci
      - name: Deploy
        run: npx serverless deploy
      - name: Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
